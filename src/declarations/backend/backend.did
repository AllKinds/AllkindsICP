type User = record {
	about : record {
		opt text;
		bool;
	};
	birth : record {
		opt int;
		bool;
	};
	connect : record {
		opt text;
		bool;
	};
	created : int;
	gender : record {
		opt Gender;
		bool;
	};
	username : text;
};
type Result_2 = variant {
	err : text;
	ok : vec Question;
};
type Result_1 = variant {
	err : text;
	ok : User;
};
type Result = variant {
	err : text;
	ok;
};
type Question = record {
	color : opt Color;
	created : int;
	creater : principal;
	hash : Hash;
	question : text;
};
type LikeKind = variant {
	Dislike : nat;
	Like : nat;
};
type Hash = nat32;
type Gender = variant {
	Female;
	Male;
	Other;
	Queer;
};
type Color = variant { Default };
type AnswerKind = variant { Bool : bool };
service : {
	createQuestion : (text) -> (Result);
	createUser : (text) -> (Result);
	getAskableQuestions : (nat) -> (Result_2) query;
	getUser : () -> (Result_1) query;
	submitAnswer : (Hash, AnswerKind) -> (Result);
	submitLike : (Hash, LikeKind) -> (Result);
	submitSkip : (Hash) -> (Result);
	updateProfile : (User) -> (Result);
};
